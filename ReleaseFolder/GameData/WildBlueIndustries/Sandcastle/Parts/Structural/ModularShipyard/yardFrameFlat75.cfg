PART
{
	name = yardFrameFlat75
	module = Part
	author = Angel-125
	MODEL
	{
		model = WildBlueIndustries/Sandcastle/Parts/Structural/ModularShipyard/yardFrameFlat75
	}
	rescaleFactor = 1

	node_stack_top = 0, 3.75, 0, 0, 1, 0, 2
	node_stack_bottom = 0, -3.75, 0, 0, -1, 0, 2
	node_stack_left	= 3.75, 0, 0, 1, 0, 0, 2
	node_stack_right = -3.75, 0, 0 ,-1, 0, 0, 2
	node_stack_front = 0, 0, 0.09375, 0, 0, 1, 2
	node_stack_back = 0, 0, -0.09375, 0, 0, -1, 2
	node_attach = 0, 3.75, 0, 0, 1, 0, 2
	
	TechRequired = specializedConstruction
	entryCost = 20000
	cost = 360
	category = Structural
	subcategory = 0
	title = #LOC_SANDCASTLE_yardFrameFlat75Title // MS-75 Yard Frame
	manufacturer = #autoLOC_501663 // Dinkelstein Kerman's Construction Emporium
	description = #LOC_SANDCASTLE_yardFrameFlat75Desc // A sturdy modular metal frame that is optimized for creating orbiting shipyards. It can be configured into a grid shape to make large structures.
	attachRules = 1,1,1,1,1
	mass = 1
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 1
	crashTolerance = 80
	breakingForce = 2000
	breakingTorque = 2000
	maxTemp = 2000 // = 3200
	stackSymmetry = 1
	fuelCrossFeed = False
	bulkheadProfiles = size5, srf
	tags = #autoLOC_8310183   //#autoLOC_8310183 = body build construct cover extend fabricate plat structur support

	MODULE
	{
		// This is a specialized class that creates a two-dimensional grid of meshes from a collection of meshes provided by the model.
		// While it is possible to duplicate multiple copies of a single transform, research shows that the part's radial attachment
		// system gets messed up when you do that. So for now, we have a grid that is limited by the total number of meshes in the model.
		name = ModulePartGridVariants
		
		// Total rows/columns. These are multiplied together to get the total elements.
		totalRows = 6
		totalColumns = 6

		// All model transforms start with this prefix. Individual elements in the mesh should have " (n)" appended to them
		// NOTE: Be sure to have a total number of elements equal to totalRows * totalColumns and be sure to label them from (0) to (totalElements - 1)
		// Example: yardFrameFlat75 (0), yardFrameFlat75 (1) ... yardFrameFlat75 (35)
		// Note that there is a space between the prefix and the element id.
		elementTransformName = yardFrameFlat75

		// Length/width of each element in meters
		elementLength = 7.5
		elementWidth = 7.5
		elementHeight = 0.1875
	}

	MODULE
	{
		name = ModuleCargoPart

		// The frame can only be packed in its single 1 x 1 form.
		packedVolume = 10550
	}
}
