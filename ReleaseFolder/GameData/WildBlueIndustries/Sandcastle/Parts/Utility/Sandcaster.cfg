PART
{
	name = wbiELSandcaster
	module = Part
	author = Angel-125

	MODEL
	{
		model = WildBlueIndustries/Sandcastle/Parts/Utility/SharedAssets/sandcaster
	}
	rescaleFactor = 1
	node_stack_bottom = 0.0, -0.24285, 0.0, 0.0, -1.0, 0.0, 2
	node_attach = 0.0, -0.24285, 0.0, 0.0, -1.0, 0.0, 2

	TechRequired = automation
	entryCost = 55000
	cost = 127500
	category = Utility
	subcategory = 0
	title = #LOC_SANDCASTLE_sandcasterTitle // Sandcaster 3D Printer
	manufacturer = #autoLOC_501663 // Dinkelstein Kerman's Construction Emporium
	description = #LOC_SANDCASTLE_sandcasterDesc // The Sandcaster is an automated 3D printer that's capable of creating whole vessels without the need for kerbals on site. It is well suited for deployment well ahead of a crewed expedition. The Sandcaster works best when coupled with a smelter and drilling rig capable of digging up metal ore and coverting it into rocket parts.
	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,1,1,0,0

	// --- standard part parameters ---
	mass = 2.5
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 7
	maxTemp = 2500
	emissiveConstant = 0.4
	skinInternalConductionMult = 0.002
	heatConductivity = 0.00024
	breakingForce = 5000
	breakingTorque = 5000
	bulkheadProfiles = size2, srf
	tags = construction cck-Sandcastle

	// Custom version of ELLaunchpad to move the launch position transform so that spawned vessels won't collide with the printer.
	MODULE:NEEDS[Launchpad]
	{
		name = ELSurveyStation

		// Typical EL Launchpad spawn transform name. This gets moved around.
		SpawnTransform = LaunchPos

		StationName = Sandcaster
		SiteRanges = 200,500,1000,1200,1400,1600,1800,2000
	}

	MODULE:NEEDS[Launchpad]
	{
		name = ELWorkshop
		ProductivityFactor = 0
		UnmannedProductivity = 0.25
		IgnoreCrewCapacity = True
	}

	MODULE:NEEDS[Launchpad]
	{
        	name = ELConverter
	        ConverterName = #EL_ConverterName_PartProduction // Part Production
	        StartActionName = #EL_EventGUIName_StartPartProduction // Start Part Production
	        StopActionName = #EL_EventGUIName_StopPartProduction // Stop Part Production
	        ConverterRecipe = MetalWorking
	        Rate = 0.0312
	}

// It seems that we can't use both the EL recycler and the Shipbreaker in the same part. ELRecycler eats the OnTriggerXXX events.
//	MODULE:NEEDS[Launchpad]
//	{
//		name = ELRecycler
//		RecycleField_name = RecycleTarget
//	}

	MODULE
	{
		name = ModuleAnimateGenericExtended
		animationName = Deploy
		startEventGUIName = #LOC_SANDCASTLE_sandcasterDeploy // Deploy Arm
		endEventGUIName = #LOC_SANDCASTLE_sandcasterRetract // Retract Arm
		actionGUIName = #LOC_SANDCASTLE_sandcasterToggle // Toggle Arm

		startSoundURL = Squad/Sounds/elev_start
		loopSoundURL = Squad/Sounds/elev_loop
		loopSoundPitch = 0.6
		stopSoundURL = Squad/Sounds/elev_stop
	}

	MODULE
	{
		name = ModuleCargoPart	
		stackableQuantity = 1
		packedVolume = 27659
	}

	MODULE
	{
		name = WBIPrinterRequirements
	}

	MODULE
	{
		nanme = ModuleFuelPump
	}

	MODULE
	{
		name = WBIPrintShop

		// Prints parts of any size
		maxPrintVolume = -1

		printSpeedUSec = 0.25

		UseSpecialistBonus = false

		// Spawns the part into the world instead of placing it into an inventory
		enablePartSpawn = true

		// Where to spawn the printed part.
		spawnTransformName = LaunchPosVAB

		// Axis upon which to displace the part during spawn in. X, Y, Z
		offsetAxis = 0,1,1

		printShopGUIName = #LOC_SANDCASTLE_printAPart
		printShopwGroupDisplayName = #LOC_SANDCASTLE_partPrinter
		printShopDialogTitle = #LOC_SANDCASTLE_partPrinter

		RESOURCE
		{
			name = ElectricCharge
			rate = 10
		}
	}

	MODULE
	{
		name = SCShipwright
		printSpeedUSec = 0.25
		UseSpecialistBonus = false

		// Spawn transform
		//   +Y
		//    |
		// +Z | +X
		//   \|/
		spawnTransformName = LaunchPosVAB

		// Maximum possible craft size that can be printed: Height (X) Width (Y) Length (Z). E.G. 5,5,5
		// Leave empty for unlimited printing.
//		maxCraftDimensions = 

		RESOURCE
		{
			name = ElectricCharge
			rate = 10
		}
	}

	MODULE
	{
		name = SCShipbreaker
		recycleSpeedUSec = 0.25
		recyclePercentage = 0.4
		UseSpecialistBonus = false

		// Maximum distance allowed for other vessels with shipbreakers to help break up a vessel.
		// Default is 50 (meters).
		maxBuildingDistance = 50

		// The recycler itself may require one or more resources in order to operate.
		// You can also use INPUT_RESOURCE in place of RESOURCE, but the other fields remain the same.		
		// It's possible to have some kind of OUTPUT_RESOURCE as well, but we just use the stock resources.
		RESOURCE
		{
			name = ElectricCharge
			rate = 5
		}
	}

	RESOURCE:NEEDS[Launchpad]
	{
		name = RocketParts
		amount = 300
		maxAmount = 300
	}

	RESOURCE:NEEDS[Launchpad]
	{
		name = Metal
		amount = 50
		maxAmount = 50
	}
}