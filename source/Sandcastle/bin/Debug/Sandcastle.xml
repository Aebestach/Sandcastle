<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sandcastle</name>
    </assembly>
    <members>
        <member name="T:Sandcastle.PartModules.SCModuleEVAVariants">
            <summary>
            This helper part module makes it possible to change part variants during EVA Construction.
            </summary>
        </member>
        <member name="M:Sandcastle.PartModules.SCModuleEVAVariants.enableVariantSwitching">
            <summary>
            Enables in-flight variant switching
            </summary>
        </member>
        <member name="M:Sandcastle.PartModules.SCModuleEVAVariants.disableVariantSwitching">
            <summary>
            Disables in-flight variant switching
            </summary>
        </member>
        <member name="T:Sandcastle.Inventory.InventoryUtils">
            <summary>
            An inventory helper class
            </summary>
        </member>
        <member name="M:Sandcastle.Inventory.InventoryUtils.GetPartFromAvailablePart(AvailablePart)">
            <summary>
            Retrieves an instantiated part from the supplied available part.
            </summary>
            <param name="availablePart">The AvailablePart</param>
            <returns></returns>
        </member>
        <member name="M:Sandcastle.Inventory.InventoryUtils.GetInventoryWithCargoSpace(Vessel,AvailablePart)">
            <summary>
            Gets an inventory with enough storage space and storage mass for the desired part.
            </summary>
            <param name="vessel">The vessel to query.</param>
            <param name="availablePart">The AvailablePart to check for space.</param>
            <returns>A ModuleInventoryPart if space can be found or null if not.</returns>
        </member>
        <member name="M:Sandcastle.Inventory.InventoryUtils.GetPartsToRecycle(Vessel)">
            <summary>
            Returns a list of inventory parts that can be recycled.
            </summary>
            <param name="vessel">The Vessel to search for parts to recycle.</param>
            <returns>A List of AvailablePart objects.</returns>
        </member>
        <member name="M:Sandcastle.Inventory.InventoryUtils.InventoryHasSpace(ModuleInventoryPart,AvailablePart)">
            <summary>
            Determines whether or not the supplied inventory has space for the desired part.
            </summary>
            <param name="inventory">A ModuleInventoryPart to check for space.</param>
            <param name="availablePart">An AvailablePart to check to see if it fits.</param>
            <returns>true if the inventory has space for the part, false if not.</returns>
        </member>
        <member name="M:Sandcastle.Inventory.InventoryUtils.HasEnoughSpace(Vessel,AvailablePart,System.Int32,System.Double,System.Single)">
            <summary>
            Determines whether or not the vessel has enough storage space.
            </summary>
            <param name="vessel">The vessel to query</param>
            <param name="availablePart">The AvailablePart to check for space.</param>
            <param name="amount">The number of parts that need space. Default is 1.</param>
            <returns>true if there is enough space, false if not.</returns>
        </member>
        <member name="M:Sandcastle.Inventory.InventoryUtils.HasItem(Vessel,System.String)">
            <summary>
            Determines whether or not the vessel has the item in question.
            </summary>
            <param name="vessel">The vessel to query.</param>
            <param name="partName">The name of the part to look for</param>
            <returns>true if the vessel has the part, false if not.</returns>
        </member>
        <member name="M:Sandcastle.Inventory.InventoryUtils.GetInventoryItemCount(Vessel,System.String)">
            <summary>
            Returns the number of parts in the vessel's inventory, if it has the part.
            </summary>
            <param name="vessel">The vessel to query.</param>
            <param name="partName">The name of the part to look for.</param>
            <returns>An Int containing the number of parts in the vessel's inventory.</returns>
        </member>
        <member name="M:Sandcastle.Inventory.InventoryUtils.GetInventoryWithPart(Vessel,System.String)">
            <summary>
            Determines whether or not the vessel has the item in question.
            </summary>
            <param name="vessel">The vessel to query.</param>
            <param name="partName">The name of the part to look for</param>
            <returns>the ModuleInventoryPart if the vessel has the part, null if not.</returns>
        </member>
        <member name="M:Sandcastle.Inventory.InventoryUtils.RemoveItem(Vessel,System.String,System.Int32)">
            <summary>
            Removes the item from the vessel if it exists.
            </summary>
            <param name="vessel">The vessel to query.</param>
            <param name="partName">The name of the part to remove.</param>
            <param name="partCount">The number parts to remove. Default is 1.</param>
        </member>
        <member name="M:Sandcastle.Inventory.InventoryUtils.AddItem(Vessel,AvailablePart,System.Int32,ModuleInventoryPart,System.Boolean)">
            <summary>
            Adds the item to the vessel inventory if there is enough room.
            </summary>
            <param name="vessel">The vessel to query.</param>
            <param name="availablePart">The part to add to the inventory</param>
            <param name="variantIndex">An int containing the index of the part variant to store.</param>
            <param name="preferredInventory">The preferred inventory to store the part in.</param>
            <param name="removeResources">A bool indicating whether or not to remove resources when storing the part. Default is true.</param>
            <returns>The Part that the item was stored in, or null if no place could be found for the part.</returns>
        </member>
        <member name="M:Sandcastle.Inventory.InventoryUtils.GetPrintableParts(System.Single,System.String)">
            <summary>
            Retrieves a list of parts that can be printed by the specified max print volume.
            </summary>
            <param name="maxPrintVolume">A float containing the max possible print volume.</param>
            <param name="maxPartDimensions">An optional string containing the max possible print dimensions.</param>
            <returns>A List of AvailablePart objects that can be printed.</returns>
        </member>
        <member name="M:Sandcastle.Inventory.InventoryUtils.FindThumbnailPaths">
            <summary>
            Searches the game folder for thumbnail images.
            </summary>
        </member>
        <member name="M:Sandcastle.Inventory.InventoryUtils.GetTexture(System.String)">
            <summary>
            Retrieves the thumbnail texture that depicts the specified part name.
            </summary>
            <param name="partName">A string containing the name of the part.</param>
            <returns>A Texture2D if the texture exists, or a blank texture if not.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Sandcastle.Inventory.InventoryUtils.GetTexture(System.String,System.Int32)" -->
        <member name="M:Sandcastle.Inventory.InventoryUtils.GetFilePathForThumbnail(AvailablePart,System.Int32,System.Boolean)">
            <summary>
            Returns the full path to the part's thumbnail image.
            </summary>
            <param name="availablePart">An AvailablePart to check for images.</param>
            <param name="variantIndex">An int containing the variant index to check for. Default is -1.</param>
            <param name="useDefaultPath">A bool indicating whether or not to use the default thumbnails path.</param>
            <returns></returns>
        </member>
        <member name="T:Sandcastle.Inventory.ModuleCargoCatcher">
            <summary>
            Catches and stores cargo items into the part's inventory as long as they fit. Does not require a kerbal. This only works on single-part vessels.
            Note that you'll need a trigger collider set up in the part containing this part module in order to trigger the catch and store operation.
            </summary>
        </member>
        <member name="F:Sandcastle.Inventory.ModuleCargoCatcher.debugMode">
            <summary>
            Flag to indicate that we're in debug mode.
            </summary>
        </member>
        <member name="F:Sandcastle.Inventory.ModuleCargoCatcher.deployAnimationName">
            <summary>
            Optional name of the animation to play when preparing the catcher to catch cargo parts.
            </summary>
        </member>
        <member name="F:Sandcastle.Inventory.ModuleCargoCatcher.canCatchParts">
            <summary>
            Flag to indicate that we can catch parts.
            </summary>
        </member>
        <member name="M:Sandcastle.Inventory.ModuleCargoCatcher.ArmCatcher">
            <summary>
            Arms the catcher, enabling it to catch parts.
            </summary>
        </member>
        <member name="M:Sandcastle.Inventory.ModuleCargoCatcher.DisarmCatcher">
            <summary>
            Disarms the catcher, preventing it from catching parts.
            </summary>
        </member>
        <member name="T:Sandcastle.Inventory.ModuleDefaultInventoryStack">
            <summary>
            ModuleInventoryPart's DEFAULTPARTS doesn't support stacked parts.
            This part module gets around the problem. Add this part module AFTER ModuleInventoryPart
            and part stacks will be filled out to their max stack size in the editor.
            </summary>
        </member>
        <member name="F:Sandcastle.Inventory.ModuleDefaultInventoryStack.inventoryInitialized">
            <summary>
            Flag to indicate that the part's stackable inventory items has been initialized.
            </summary>
        </member>
        <member name="T:Sandcastle.Inventory.ModuleCargoDispenser">
            <summary>
            The stock EVA Construction system lets you drag and drop inventory parts onto the ground, but it requires a kerbal to do so. This part module
            enables non-kerbal parts to remove items from the part's inventory and drop them onto the ground.
            This code is based on vessel creation code from Extraplanetary Launchpads by Taniwha and is used under the GNU General Public License.
            </summary>
        </member>
        <member name="F:Sandcastle.Inventory.ModuleCargoDispenser.debugMode">
            <summary>
            Debug flag.
            </summary>
        </member>
        <member name="F:Sandcastle.Inventory.ModuleCargoDispenser.dropTransformName">
            <summary>
            Name of the transform where dropped cargo items will appear.
            </summary>
        </member>
        <member name="F:Sandcastle.Inventory.ModuleCargoDispenser.animationName">
            <summary>
            Optional name of the animation to play when dropping an item.
            </summary>
        </member>
        <member name="M:Sandcastle.Inventory.ModuleCargoDispenser.DropPart">
            <summary>
            Drops the desired item.
            </summary>
        </member>
        <member name="M:Sandcastle.Inventory.ModuleCargoDispenser.ChangePartToDrop">
            <summary>
            Changes the desired item to drop.
            </summary>
        </member>
        <member name="M:Sandcastle.Inventory.ModuleCargoDispenser.ChangePartToDrop(System.Int32)">
            <summary>
            Changes the desired item to drop to the desired inventory slot index (if it exists).
            </summary>
            <param name="inventoryIndex">An int containing the inventory index of the item to drop.</param>
        </member>
        <member name="M:Sandcastle.Inventory.ModuleCargoDispenser.DropPart(System.Int32)">
            <summary>
            Drops the item in the desired inventory index (if it exists)
            </summary>
            <param name="inventoryIndex">An int containing the index of the inventory item to drop.</param>
        </member>
        <member name="M:Sandcastle.Inventory.ModuleCargoDispenser.DropPart(AvailablePart)">
            <summary>
            Drops the desired part if it is in the inventory.
            </summary>
            <param name="availablePart">An AvailablePart containing the item to drop.</param>
        </member>
        <member name="T:Sandcastle.PrintShop.ShipbreakerUI">
            <summary>
            Represents the Print Shop UI
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.ShipbreakerUI.recycleQueue">
            <summary>
            Represents the list of build items to recycle.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.ShipbreakerUI.jobStatus">
            <summary>
            Status of the current print job.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.ShipbreakerUI.onCancelVesselBuild">
            <summary>
            Callback to tell the controller to cancel the build.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.ShipbreakerUI.isRecycling">
            <summary>
            Flag indicating that the printer is recycling
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.ShipbreakerUI.part">
            <summary>
            The Part associated with the UI.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.ShipbreakerUI.showDecoupleButton">
            <summary>
            Flag to indicate whether or not to show the decouple button.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.ShipbreakerUI.craftName">
            <summary>
            Name of the craft being printed.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.ShipbreakerUI.estimatedCompletion">
            <summary>
            Estimated time to completion of the vessel.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.ShipbreakerUI.createAlarm">
            <summary>
            Flag to indicate if an alarm shoudl be created for print job completion.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.ShipbreakerUI.onRecycleStatusUpdate">
            <summary>
            Callback to let the controller know about the recycle state.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.ShipbreakerUI.resourceRecylePercent">
            <summary>
            Percentage of the resources that can be recycled.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.ShipbreakerUI.supportShipbreakers">
            <summary>
            List of support shipbreakers
            </summary>
        </member>
        <member name="M:Sandcastle.PrintShop.ShipbreakerUI.SetVisible(System.Boolean)">
            <summary>
            Toggles window visibility
            </summary>
            <param name="newValue">A flag indicating whether the window shoudld be visible or not.</param>
        </member>
        <member name="M:Sandcastle.PrintShop.ShipbreakerUI.DrawWindowContents(System.Int32)">
            <summary>
            Draws the window
            </summary>
            <param name="windowId">An int representing the window ID.</param>
        </member>
        <member name="T:Sandcastle.PrintShop.SpawnShipDelegate">
            <summary>
            Asks the delegate to spawn the ship that's just been printed.
            </summary>
        </member>
        <member name="T:Sandcastle.PrintShop.DecoupleShipDelegate">
            <summary>
            Asks the delegate to decouple the ship that's just been printed.
            </summary>
        </member>
        <member name="T:Sandcastle.PrintShop.SelectShipDelegate">
            <summary>
            Delegate to get the ship to print.
            </summary>
        </member>
        <member name="T:Sandcastle.PrintShop.CancelBuildDelegate">
            <summary>
            Delegate to cancel the build.
            </summary>
        </member>
        <member name="T:Sandcastle.PrintShop.ShipwrightUI">
            <summary>
            Represents the Print Shop UI
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.ShipwrightUI.printQueue">
            <summary>
            Represents the list of build items to print.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.ShipwrightUI.jobStatus">
            <summary>
            Status of the current print job.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.ShipwrightUI.onPrintStatusUpdate">
            <summary>
            Callback to let the controller know about the print state.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.ShipwrightUI.gravityRequirementsMet">
            <summary>
            Callback to see if the part's gravity requirements are met.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.ShipwrightUI.pressureRequrementsMet">
            <summary>
            Callback to see if the part's pressure requirements are met.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.ShipwrightUI.onSpawnShip">
            <summary>
            Callback to let the controller to spawn the printed ship.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.ShipwrightUI.onDecoupleShip">
            <summary>
            Callback to let the controller to decouple the printed ship.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.ShipwrightUI.onOpenCraftBrowser">
            <summary>
            Callback to select a ship to print.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.ShipwrightUI.onCancelVesselBuild">
            <summary>
            Callback to tell the controller to cancel the build.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.ShipwrightUI.isPrinting">
            <summary>
            Flag indicating that the printer is printing
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.ShipwrightUI.part">
            <summary>
            The Part associated with the UI.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.ShipwrightUI.showSpawnButton">
            <summary>
            Flag to indicate whether or not to show the spawn button.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.ShipwrightUI.showDecoupleButton">
            <summary>
            Flag to indicate whether or not to show the decouple button.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.ShipwrightUI.craftName">
            <summary>
            Name of the craft being printed.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.ShipwrightUI.estimatedCompletion">
            <summary>
            Estimated time to completion of the vessel.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.ShipwrightUI.createAlarm">
            <summary>
            Flag to indicate if an alarm shoudl be created for print job completion.
            </summary>
        </member>
        <member name="M:Sandcastle.PrintShop.ShipwrightUI.SetVisible(System.Boolean)">
            <summary>
            Toggles window visibility
            </summary>
            <param name="newValue">A flag indicating whether the window shoudld be visible or not.</param>
        </member>
        <member name="M:Sandcastle.PrintShop.ShipwrightUI.DrawWindowContents(System.Int32)">
            <summary>
            Draws the window
            </summary>
            <param name="windowId">An int representing the window ID.</param>
        </member>
        <member name="T:Sandcastle.PrintShop.RecyclerUI">
            <summary>
            Represents the Print Shop UI
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.RecyclerUI.titleText">
            <summary>
            Title of the selection dialog.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.RecyclerUI.partsList">
            <summary>
            Complete list of recyclable parts.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.RecyclerUI.recycleQueue">
            <summary>
            Represents the list of build items to print.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.RecyclerUI.jobStatus">
            <summary>
            Status of the current print job.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.RecyclerUI.onRecycleStatus">
            <summary>
            Callback to let the controller know about the print state.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.RecyclerUI.isRecycling">
            <summary>
            Flag indicating that the printer is printing
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.RecyclerUI.part">
            <summary>
            The Part associated with the UI.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.RecyclerUI.recyclePercentage">
            <summary>
            How much of the part's resources are recycled.
            </summary>
        </member>
        <member name="M:Sandcastle.PrintShop.RecyclerUI.SetVisible(System.Boolean)">
            <summary>
            Toggles window visibility
            </summary>
            <param name="newValue">A flag indicating whether the window shoudld be visible or not.</param>
        </member>
        <member name="M:Sandcastle.PrintShop.RecyclerUI.DrawWindowContents(System.Int32)">
            <summary>
            Draws the window
            </summary>
            <param name="windowId">An int representing the window ID.</param>
        </member>
        <member name="M:Sandcastle.PrintShop.RecyclerUI.updatePartPreview(System.Int32)">
            <summary>
            Updates the part preview
            </summary>
            <param name="partIndex">An Int containing the index of the part to preview</param>
        </member>
        <member name="M:Sandcastle.PrintShop.RecyclerUI.updateThumbnails">
            <summary>
            Updates the part thumbnails
            </summary>
        </member>
        <member name="T:Sandcastle.PrintShop.UpdatePrintStatusDelegate">
            <summary>
            Callback to let the controller know about the print state.
            </summary>
        </member>
        <member name="T:Sandcastle.PrintShop.GravityRequirementsMetDelegate">
            <summary>
            Asks the delegate if the minimum gravity requirements are met.
            </summary>
            <param name="minimumGravity">A float containing the minimum required gravity.</param>
            <returns>true if the requirement can be met, false if not.</returns>
        </member>
        <member name="T:Sandcastle.PrintShop.PressureRequirementMetDelegate">
            <summary>
            Asks the delegate if the minimum pressure requirements are met.
            </summary>
            <param name="minimumPressure">A float containing the minimum required pressure.</param>
            <returns>true if the requirement can be met, false if not.</returns>
        </member>
        <member name="T:Sandcastle.PrintShop.SpawnPartDelegate">
            <summary>
            Asks the delegate to spawn the current part that's just been printed.
            </summary>
        </member>
        <member name="T:Sandcastle.PrintShop.PrintShopUI">
            <summary>
            Represents the Print Shop UI
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.PrintShopUI.partsList">
            <summary>
            Complete list of printable parts.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.PrintShopUI.printQueue">
            <summary>
            Represents the list of build items to print.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.PrintShopUI.jobStatus">
            <summary>
            Status of the current print job.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.PrintShopUI.onPrintStatusUpdate">
            <summary>
            Callback to let the controller know about the print state.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.PrintShopUI.gravityRequirementsMet">
            <summary>
            Callback to see if the part's gravity requirements are met.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.PrintShopUI.pressureRequrementsMet">
            <summary>
            Callback to see if the part's pressure requirements are met.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.PrintShopUI.onSpawnPrintedPart">
            <summary>
            Callback to let the controller to spawn the printed part.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.PrintShopUI.isPrinting">
            <summary>
            Flag indicating that the printer is printing
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.PrintShopUI.part">
            <summary>
            The Part associated with the UI.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.PrintShopUI.whitelistedCategories">
            <summary>
            Whitelisted categories that the printer can print from.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.PrintShopUI.showPartSpawnButton">
            <summary>
            Flag to indicate whether or not to show the part spawn button.
            </summary>
        </member>
        <member name="M:Sandcastle.PrintShop.PrintShopUI.SetVisible(System.Boolean)">
            <summary>
            Toggles window visibility
            </summary>
            <param name="newValue">A flag indicating whether the window shoudld be visible or not.</param>
        </member>
        <member name="M:Sandcastle.PrintShop.PrintShopUI.DrawWindowContents(System.Int32)">
            <summary>
            Draws the window
            </summary>
            <param name="windowId">An int representing the window ID.</param>
        </member>
        <member name="T:Sandcastle.PrintShop.SCShipbreaker">
            <summary>
            Represents a shop that is capable of printing items and placing them in an available inventory.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.SCShipbreaker.debugMode">
            <summary>
            A flag to enable/disable debug mode.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.SCShipbreaker.recycleSpeedUSec">
            <summary>
            The number of resource units per second that the recycler can recycle.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.SCShipbreaker.UseSpecialistBonus">
            <summary>
            Flag to indicate whether or not to allow specialists to improve the recycle speed. Exactly how the specialist(s) does that is a trade secret.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.SCShipbreaker.SpecialistBonus">
            <summary>
            Per experience rating, how much to improve the recycle speed by.
            The print shop part must have crew capacity.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.SCShipbreaker.ExperienceEffect">
            <summary>
            The skill required to improve the recycle speed.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.SCShipbreaker.runningEffect">
            <summary>
            Name of the effect to play from the part's EFFECTS node when the printer is running.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.SCShipbreaker.recyclePercentage">
            <summary>
            What percentage of resources will be recycled.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.SCShipbreaker.animationName">
            <summary>
            Name of the animation to play during printing.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.SCShipbreaker.vesselCaptureEnabled">
            <summary>
            Flag to indicate if vessel capture is enabled.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.SCShipbreaker.maxBuildingDistance">
            <summary>
            Maximum distance allowed for other shipbreakers to help break up a vessel.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.SCShipbreaker.recycleQueue">
            <summary>
            Represents the list of build items to recycle.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.SCShipbreaker.recycleState">
            <summary>
            Current state of the recycler.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.SCShipbreaker.recycleStatusText">
            <summary>
            status text.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.SCShipbreaker.lastUpdateTime">
            <summary>
            Describes when the recycler was last updated.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.SCShipbreaker.currentJob">
            <summary>
            Current job being recycled.
            </summary>
        </member>
        <member name="T:Sandcastle.PrintShop.WBICargoRecycler">
            <summary>
            Represents a shop that is capable of printing items and placing them in an available inventory.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBICargoRecycler.debugMode">
            <summary>
            A flag to enable/disable debug mode.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBICargoRecycler.recycleSpeedUSec">
            <summary>
            The number of resource units per second that the recycler can recycle.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBICargoRecycler.UseSpecialistBonus">
            <summary>
            Flag to indicate whether or not to allow specialists to improve the recycle speed. Exactly how the specialist(s) does that is a trade secret.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBICargoRecycler.SpecialistBonus">
            <summary>
            Per experience rating, how much to improve the recycle speed by.
            The print shop part must have crew capacity.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBICargoRecycler.ExperienceEffect">
            <summary>
            The skill required to improve the recycle speed.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBICargoRecycler.runningEffect">
            <summary>
            Name of the effect to play from the part's EFFECTS node when the printer is running.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBICargoRecycler.recyclePercentage">
            <summary>
            What percentage of resources will be recycled.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBICargoRecycler.animationName">
            <summary>
            Name of the animation to play during printing.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBICargoRecycler.recycleQueue">
            <summary>
            Represents the list of build items to recycle.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBICargoRecycler.recycleState">
            <summary>
            Current state of the recycler.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBICargoRecycler.lastUpdateTime">
            <summary>
            Describes when the recycler was last updated.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBICargoRecycler.currentJob">
            <summary>
            Current job being recycled.
            </summary>
        </member>
        <member name="T:Sandcastle.PrintShop.BuildItem">
            <summary>
            Represents an item that needs to be built.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.BuildItem.kBuildItemNode">
            <summary>
            Build item node identifier
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.BuildItem.partName">
            <summary>
            Name of the part being built.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.BuildItem.availablePart">
            <summary>
            The Available part representing the build item.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.BuildItem.materials">
            <summary>
            List of resource materials required. Rate in this context represents the amount of the resource required in order to complete the part.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.BuildItem.requiredComponents">
            <summary>
            List of parts required to complete the build item. The parts must be in the vessel inventory.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.BuildItem.totalUnitsRequired">
            <summary>
            Total units required to produce the item, determined from all required resources.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.BuildItem.totalUnitsPrinted">
            <summary>
            Total units printed to date, determined from all required resources.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.BuildItem.isBeingRecycled">
            <summary>
            Flag indicating whether or not the part is being recycled.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.BuildItem.minimumGravity">
            <summary>
            The mininum gravity, in m/sec^2, that the part requires in order for the printer to print it.
            If set to 0, then the printer's vessel must be orbiting, sub-orbital, or on an escape trajectory, and not under acceleration.
            The default is -1, which ignores this requirement.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.BuildItem.minimumPressure">
            <summary>
            The minimum pressure, in kPA, that the part required in order for the printer to print it.
            If set to > 1, then the printer's vessel must be in an atmosphere or submerged.
            If set to 0, then the printer's vessel must be in a vacuum.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.BuildItem.removeResources">
            <summary>
            Determines whether or not the printer should remove the part's resources before placing the printed part in an inventory.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.BuildItem.variantIndex">
            <summary>
            Index of the part variant to use (if any).
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.BuildItem.packedVolume">
            <summary>
            Volume of the item being printed.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.BuildItem.isBlacklisted">
            <summary>
            Flag indicating if the part is blacklisted or not. If blacklisted then it can't be printed by a shipwright printer.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.BuildItem.mass">
            <summary>
            Mass of the part including variant.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.BuildItem.unpackedVolume">
            <summary>
            Volume of the part when unpacked.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.BuildItem.isUnpacked">
            <summary>
            Flag to indicate whether or not the part is unpacked.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.BuildItem.flightId">
            <summary>
            ID of the part.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.BuildItem.waitForSupportCompletion">
            <summary>
            Flag to wait for a support unit to complete the job.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.BuildItem.skipInventoryAdd">
            <summary>
            Flag to indicate whether or not to add the item to the inventory when printing has completed.
            This is used by printers that are supporting a lead Shipwright. Instead of storing the part, they hand it over to the lead Shipwright for inclusion in a vessel.
            </summary>
        </member>
        <member name="M:Sandcastle.PrintShop.BuildItem.#ctor(ConfigNode)">
            <summary>
            Constructs a new build item from the supplied config node.
            </summary>
            <param name="node">A ConfigNode containing data for the build item.</param>
        </member>
        <member name="M:Sandcastle.PrintShop.BuildItem.#ctor(AvailablePart)">
            <summary>
            Constructs a build item from the supplied available part.
            </summary>
            <param name="availablePart">The AvailablePart to base the build item on.</param>
        </member>
        <member name="M:Sandcastle.PrintShop.BuildItem.Save">
            <summary>
            Saves the build item.
            </summary>
            <returns>A ConfigNode containing serialized data.</returns>
        </member>
        <member name="T:Sandcastle.PrintShop.MaterialsList">
            <summary>
            Represents a list of resources needed to build an item of a particular part category.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.MaterialsList.kMaterialsListNode">
            <summary>
            Node ID for a materials list.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.MaterialsList.kTechNodeMaterials">
            <summary>
            Node ID for tech node materials. Parts in a specific tech node can require additional materials.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.MaterialsList.kDefaultMaterialsListName">
            <summary>
            Name of the default materials list.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.MaterialsList.kResourceNode">
            <summary>
            Represents a resource node.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.MaterialsList.name">
            <summary>
            Name of the materials list. This should correspond to one of the part categories.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.MaterialsList.materials">
            <summary>
            List of resource materials required.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.MaterialsList.requiredComponents">
            <summary>
            List of components required by the materials list.
            </summary>
        </member>
        <member name="M:Sandcastle.PrintShop.MaterialsList.LoadLists">
            <summary>
            Loads the materials lists that specify what materials are required to produce an item from a particular category.
            </summary>
            <returns>A Dictionary containing the list names as keys and MaterialList objects as values.</returns>
        </member>
        <member name="F:Sandcastle.PrintShop.MaterialsList.materialsLists">
            <summary>
            A map of all materials lists, keyed by part category name.
            </summary>
        </member>
        <member name="M:Sandcastle.PrintShop.MaterialsList.GetListForCategory(System.String)">
            <summary>
            Returns the materials list for the requested category, or the default list if the list for the requested category doesn't exist.
            </summary>
            <param name="categoryName">A string containing the desired category.</param>
            <returns>A MaterialsList if one exists for the desired category, or the default list.</returns>
        </member>
        <member name="M:Sandcastle.PrintShop.MaterialsList.GetDefaultList">
            <summary>
            Creates the default materials list.
            </summary>
            <returns>A MaterialsList containing the default materials.</returns>
        </member>
        <member name="T:Sandcastle.PrintShop.WBIPrintShop">
            <summary>
            Represents a shop that is capable of printing items and placing them in an available inventory.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBIPrintShop.printShopGUIName">
            <summary>
            GUI name to use for the event that opens the printer GUI.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBIPrintShop.printShopwGroupDisplayName">
            <summary>
            Alternate group display name to use.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBIPrintShop.printShopDialogTitle">
            <summary>
            Title to use for the print shop dialog
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBIPrintShop.printStateString">
            <summary>
            Current print state.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBIPrintShop.enablePartSpawn">
            <summary>
            Flag indicating that part spawn is enabled. This lets the printer spawn parts into the world instead of putting them into an inventory.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBIPrintShop.offsetAxis">
            <summary>
            Axis upon which to displace the part during spawn in. X, Y, Z
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBIPrintShop.maxPartDimensions">
            <summary>
            Maximum possible craft size that can be printed: Height (X) Width (Y) Length (Z).
            Leave empty for unlimited printing.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBIPrintShop.repositionCraftBeforeSpawning">
            <summary>
            Flag to indicate if it should offset the printed vessel to avoid collisions. Recommended to set to FALSE for printers with enclosed printing spaces.
            </summary>
        </member>
        <member name="T:Sandcastle.PrintShop.WBIPrinterRequirements">
            <summary>
            Describes the 3D Printer requirements for the part. This is a stub part module; the real functionality is over in PrinterInfoHelper.
            We have to do this because GetInfo is called during game start, we rely on PartLoader to get information about other parts that are needed to 3D print this part,
            and not all of the parts will be loaded when GetInfo is called.
            </summary>
        </member>
        <member name="T:Sandcastle.PrintShop.SCShipwright">
            <summary>
            Prints entire vessels
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.SCShipwright.spawnTransformVABName">
            <summary>
            Alternate transform to use for VAB craft.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.SCShipwright.spawnTransformSPHName">
            <summary>
            Alternate transform to use for SPH craft.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.SCShipwright.repositionCraftBeforeSpawning">
            <summary>
            Flag to indicate if it should offset the printed vessel to avoid collisions. Recommended to set to FALSE for printers with enclosed printing spaces.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.SCShipwright.printStateString">
            <summary>
            Current printer state.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.SCShipwright.maxCraftDimensions">
            <summary>
            Maximum possible craft size that can be printed: Height (X) Width (Y) Length (Z).
            Leave empty for unlimited printing.
            </summary>
        </member>
        <member name="T:Sandcastle.PrintShop.WBIPrintStates">
            <summary>
            Lists the different printer states
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBIPrintStates.Idle">
            <summary>
            Printer is idle, nothing to print.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBIPrintStates.Paused">
            <summary>
            Printer has an item to print but is paused.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBIPrintStates.Printing">
            <summary>
            Printer is printing something.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBIPrintStates.Recycling">
            <summary>
            The recycler is recycling something.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.SCBasePrinter.debugMode">
            <summary>
            A flag to enable/disable debug mode.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.SCBasePrinter.maxPrintVolume">
            <summary>
            The maximum volume that the printer can print, in liters. Set to less than 0 for no restrictions.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.SCBasePrinter.printSpeedUSec">
            <summary>
            The number of resource units per second that the printer can print.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.SCBasePrinter.UseSpecialistBonus">
            <summary>
            Flag to indicate whether or not to allow specialists to improve the print speed. Exactly how the specialist(s) does that is a trade secret.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.SCBasePrinter.SpecialistBonus">
            <summary>
            Per experience rating, how much to improve the print speed by.
            The print shop part must have crew capacity.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.SCBasePrinter.ExperienceEffect">
            <summary>
            The skill required to improve the print speed.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.SCBasePrinter.runningEffect">
            <summary>
            Name of the effect to play from the part's EFFECTS node when the printer is running.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.SCBasePrinter.spawnTransformName">
            <summary>
            Where to spawn the printed part.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.SCBasePrinter.printQueue">
            <summary>
            Represents the list of build items to print.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.SCBasePrinter.printState">
            <summary>
            Current state of the printer.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.SCBasePrinter.lastUpdateTime">
            <summary>
            Describes when the printer was last updated.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.SCBasePrinter.currentJob">
            <summary>
            Current job being printed.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.SCBasePrinter.animationName">
            <summary>
            Name of the animation to play during printing.
            </summary>
        </member>
        <member name="F:Sandcastle.SandcastleScenario.onSupportPrintingRequest">
            <summary>
            A vessel printer has requested a list of parts to be printed.
            </summary>
        </member>
        <member name="F:Sandcastle.SandcastleScenario.onPartPrinted">
            <summary>
            A part has been printed.
            </summary>
        </member>
        <member name="F:Sandcastle.SandcastleScenario.onPartRecycled">
            <summary>
            A part has been recycled.
            </summary>
        </member>
        <member name="T:Sandcastle.Utilities.PrinterInfoHelper">
            <summary>
            This helper fills out the info text for the WBIPrinterRequirements part module. During the game startup, it asks part modules to GetInfo. WBIPrinterRequirements is no exception.
            However, because it relies on the PartLoader to obtain information about prerequisite components, WBIPrinterRequirements can't completely fill out its info.
            We get around the problem by waiting until we load into the editor, and manually changing the ModuleInfo associated with WBIPrinterRequirements.
            It's crude but effective.
            </summary>
        </member>
    </members>
</doc>
