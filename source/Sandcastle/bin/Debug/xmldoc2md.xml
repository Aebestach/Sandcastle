<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sandcastle</name>
    </assembly>
    <members>
        <member name="T:Sandcastle.Inventory.InventoryUtils">
            <summary>
            An inventory helper class
            </summary>
        </member>
        <member name="M:Sandcastle.Inventory.InventoryUtils.GetInventoryWithCargoSpace(Vessel,AvailablePart)">
            <summary>
            Gets an inventory with enough storage space and storage mass for the desired part.
            </summary>
            <param name="vessel">The vessel to query.</param>
            <param name="availablePart">The AvailablePart to check for space.</param>
            <returns>A ModuleInventoryPart if space can be found or null if not.</returns>
        </member>
        <member name="M:Sandcastle.Inventory.InventoryUtils.GetPartsToRecycle(Vessel)">
            <summary>
            Returns a list of inventory parts that can be recycled.
            </summary>
            <param name="vessel">The Vessel to search for parts to recycle.</param>
            <returns>A List of AvailablePart objects.</returns>
        </member>
        <member name="M:Sandcastle.Inventory.InventoryUtils.InventoryHasSpace(ModuleInventoryPart,AvailablePart)">
            <summary>
            Determines whether or not the supplied inventory has space for the desired part.
            </summary>
            <param name="inventory">A ModuleInventoryPart to check for space.</param>
            <param name="availablePart">An AvailablePart to check to see if it fits.</param>
            <returns>true if the inventory has space for the part, false if not.</returns>
        </member>
        <member name="M:Sandcastle.Inventory.InventoryUtils.HasEnoughSpace(Vessel,AvailablePart,System.Int32)">
            <summary>
            Determines whether or not the vessel has enough storage space.
            </summary>
            <param name="vessel">The vessel to query</param>
            <param name="availablePart">The AvailablePart to check for space.</param>
            <param name="amount">The number of parts that need space. Default is 1.</param>
            <returns>true if there is enough space, false if not.</returns>
        </member>
        <member name="M:Sandcastle.Inventory.InventoryUtils.HasItem(Vessel,System.String)">
            <summary>
            Determines whether or not the vessel has the item in question.
            </summary>
            <param name="vessel">The vessel to query.</param>
            <param name="partName">The name of the part to look for</param>
            <returns>true if the vessel has the part, false if not.</returns>
        </member>
        <member name="M:Sandcastle.Inventory.InventoryUtils.GetInventoryItemCount(Vessel,System.String)">
            <summary>
            Returns the number of parts in the vessel's inventory, if it has the part.
            </summary>
            <param name="vessel">The vessel to query.</param>
            <param name="partName">The name of the part to look for.</param>
            <returns>An Int containing the number of parts in the vessel's inventory.</returns>
        </member>
        <member name="M:Sandcastle.Inventory.InventoryUtils.GetInventoryWithPart(Vessel,System.String)">
            <summary>
            Determines whether or not the vessel has the item in question.
            </summary>
            <param name="vessel">The vessel to query.</param>
            <param name="partName">The name of the part to look for</param>
            <returns>the ModuleInventoryPart if the vessel has the part, null if not.</returns>
        </member>
        <member name="M:Sandcastle.Inventory.InventoryUtils.RemoveItem(Vessel,System.String,System.Int32)">
            <summary>
            Removes the item from the vessel if it exists.
            </summary>
            <param name="vessel">The vessel to query.</param>
            <param name="partName">The name of the part to remove.</param>
            <param name="partCount">The number parts to remove. Default is 1.</param>
        </member>
        <member name="M:Sandcastle.Inventory.InventoryUtils.AddItem(Vessel,AvailablePart,ModuleInventoryPart,System.Boolean)">
            <summary>
            Adds the item to the vessel inventory if there is enough room.
            </summary>
            <param name="vessel">The vessel to query.</param>
            <param name="availablePart">The part to add to the inventory</param>
            <param name="preferredInventory">The preferred inventory to store the part in.</param>
            <param name="removeResources">A bool indicating whether or not to remove resources when storing the part. Default is true.</param>
            <returns>The Part that the item was stored in, or null if no place could be found for the part.</returns>
        </member>
        <member name="M:Sandcastle.Inventory.InventoryUtils.FindThumbnailPaths">
            <summary>
            Searches the game folder for thumbnail images.
            </summary>
        </member>
        <member name="M:Sandcastle.Inventory.InventoryUtils.GetTexture(System.String)">
            <summary>
            Retrieves the thumbnail texture that depicts the specified part name.
            </summary>
            <param name="partName">A string containing the name of the part.</param>
            <returns>A Texture2D if the texture exists, or a blank texture if not.</returns>
        </member>
        <member name="M:Sandcastle.Inventory.InventoryUtils.GetPrintableParts(System.Single)">
            <summary>
            Retrieves a list of parts that can be printed by the specified max print volume.
            </summary>
            <param name="maxPrintVolume">A float containing the max possible print volume.</param>
            <returns>A List of AvailablePart objects that can be printed.</returns>
        </member>
        <member name="M:Sandcastle.Inventory.InventoryUtils.loadTexture(System.String)">
            <summary>
            Retrieves the thumbnail texture that depicts the specified part name.
            </summary>
            <param name="partName">A string containing the name of the part.</param>
            <returns>A Texture2D if the texture exists, or a blank texture if not.</returns>
        </member>
        <member name="T:Sandcastle.PrintShop.RecyclerUI">
            <summary>
            Represents the Print Shop UI
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.RecyclerUI.titleText">
            <summary>
            Title of the selection dialog.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.RecyclerUI.partsList">
            <summary>
            Complete list of recyclable parts.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.RecyclerUI.recycleQueue">
            <summary>
            Represents the list of build items to print.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.RecyclerUI.jobStatus">
            <summary>
            Status of the current print job.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.RecyclerUI.onRecycleStatus">
            <summary>
            Callback to let the controller know about the print state.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.RecyclerUI.isRecycling">
            <summary>
            Flag indicating that the printer is printing
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.RecyclerUI.part">
            <summary>
            The Part associated with the UI.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.RecyclerUI.recyclePercentage">
            <summary>
            How much of the part's resources are recycled.
            </summary>
        </member>
        <member name="M:Sandcastle.PrintShop.RecyclerUI.SetVisible(System.Boolean)">
            <summary>
            Toggles window visibility
            </summary>
            <param name="newValue">A flag indicating whether the window shoudld be visible or not.</param>
        </member>
        <member name="M:Sandcastle.PrintShop.RecyclerUI.DrawWindowContents(System.Int32)">
            <summary>
            Draws the window
            </summary>
            <param name="windowId">An int representing the window ID.</param>
        </member>
        <member name="M:Sandcastle.PrintShop.RecyclerUI.updatePartPreview(System.Int32)">
            <summary>
            Updates the part preview
            </summary>
            <param name="partIndex">An Int containing the index of the part to preview</param>
        </member>
        <member name="M:Sandcastle.PrintShop.RecyclerUI.updateThumbnails">
            <summary>
            Updates the part thumbnails
            </summary>
        </member>
        <member name="T:Sandcastle.PrintShop.UpdatePrintStatusDelegate">
            <summary>
            Callback to let the controller know about the print state.
            </summary>
        </member>
        <member name="T:Sandcastle.PrintShop.GravityRequirementsMetDelegate">
            <summary>
            Asks the delegate if the minimum gravity requirements are met.
            </summary>
            <param name="minimumGravity">A float containing the minimum required gravity.</param>
            <returns>true if the requirement can be met, false if not.</returns>
        </member>
        <member name="T:Sandcastle.PrintShop.PressureRequirementMetDelegate">
            <summary>
            Asks the delegate if the minimum pressure requirements are met.
            </summary>
            <param name="minimumPressure">A float containing the minimum required pressure.</param>
            <returns>true if the requirement can be met, false if not.</returns>
        </member>
        <member name="T:Sandcastle.PrintShop.PrintShopUI">
            <summary>
            Represents the Print Shop UI
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.PrintShopUI.titleText">
            <summary>
            Title of the selection dialog.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.PrintShopUI.partsList">
            <summary>
            Complete list of printable parts.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.PrintShopUI.printQueue">
            <summary>
            Represents the list of build items to print.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.PrintShopUI.jobStatus">
            <summary>
            Status of the current print job.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.PrintShopUI.onPrintStatusUpdate">
            <summary>
            Callback to let the controller know about the print state.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.PrintShopUI.gravityRequirementsMet">
            <summary>
            Callback to see if the part's gravity requirements are met.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.PrintShopUI.pressureRequrementsMet">
            <summary>
            Callback to see if the part's pressure requirements are met.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.PrintShopUI.isPrinting">
            <summary>
            Flag indicating that the printer is printing
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.PrintShopUI.part">
            <summary>
            The Part associated with the UI.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.PrintShopUI.whitelistedCategories">
            <summary>
            Whitelisted categories that the printer can print from.
            </summary>
        </member>
        <member name="M:Sandcastle.PrintShop.PrintShopUI.SetVisible(System.Boolean)">
            <summary>
            Toggles window visibility
            </summary>
            <param name="newValue">A flag indicating whether the window shoudld be visible or not.</param>
        </member>
        <member name="M:Sandcastle.PrintShop.PrintShopUI.DrawWindowContents(System.Int32)">
            <summary>
            Draws the window
            </summary>
            <param name="windowId">An int representing the window ID.</param>
        </member>
        <member name="T:Sandcastle.PrintShop.WBICargoRecycler">
            <summary>
            Represents a shop that is capable of printing items and placing them in an available inventory.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBICargoRecycler.debugMode">
            <summary>
            A flag to enable/disable debug mode.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBICargoRecycler.recycleSpeedUSec">
            <summary>
            The number of resource units per second that the recycler can recycle.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBICargoRecycler.UseSpecialistBonus">
            <summary>
            Flag to indicate whether or not to allow specialists to improve the recycle speed. Exactly how the specialist(s) does that is a trade secret.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBICargoRecycler.SpecialistBonus">
            <summary>
            Per experience rating, how much to improve the recycle speed by.
            The print shop part must have crew capacity.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBICargoRecycler.ExperienceEffect">
            <summary>
            The skill required to improve the recycle speed.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBICargoRecycler.runningEffect">
            <summary>
            Name of the effect to play from the part's EFFECTS node when the printer is running.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBICargoRecycler.recyclePercentage">
            <summary>
            What percentage of resources will be recycled.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBICargoRecycler.recycleQueue">
            <summary>
            Represents the list of build items to recycle.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBICargoRecycler.recycleState">
            <summary>
            Current state of the recycler.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBICargoRecycler.lastUpdateTime">
            <summary>
            Describes when the recycler was last updated.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBICargoRecycler.currentJob">
            <summary>
            Current job being recycled.
            </summary>
        </member>
        <member name="T:Sandcastle.PrintShop.BuildItem">
            <summary>
            Represents an item that needs to be built.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.BuildItem.kBuildItemNode">
            <summary>
            Build item node identifier
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.BuildItem.partName">
            <summary>
            Name of the part being built.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.BuildItem.availablePart">
            <summary>
            The Available part representing the build item.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.BuildItem.materials">
            <summary>
            List of resource materials required. Rate in this context represents the amount of the resource required in order to complete the part.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.BuildItem.requiredComponents">
            <summary>
            List of parts required to complete the build item. The parts must be in the vessel inventory.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.BuildItem.totalUnitsRequired">
            <summary>
            Total units required to produce the item, determined from all required resources.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.BuildItem.totalUnitsPrinted">
            <summary>
            Total units printed to date, determined from all required resources.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.BuildItem.isBeingRecycled">
            <summary>
            Flag indicating whether or not the part is being recycled.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.BuildItem.minimumGravity">
            <summary>
            The mininum gravity, in m/sec^2, that the part requires in order for the printer to print it.
            If set to 0, then the printer's vessel must be orbiting, sub-orbital, or on an escape trajectory, and not under acceleration.
            The default is -1, which ignores this requirement.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.BuildItem.minimumPressure">
            <summary>
            The minimum pressure, in kPA, that the part required in order for the printer to print it.
            If set to > 1, then the printer's vessel must be in an atmosphere or submerged.
            If set to 0, then the printer's vessel must be in a vacuum.
            </summary>
        </member>
        <member name="M:Sandcastle.PrintShop.BuildItem.#ctor(ConfigNode)">
            <summary>
            Constructs a new build item from the supplied config node.
            </summary>
            <param name="node">A ConfigNode containing data for the build item.</param>
        </member>
        <member name="M:Sandcastle.PrintShop.BuildItem.#ctor(AvailablePart)">
            <summary>
            Constructs a build item from the supplied available part.
            </summary>
            <param name="availablePart">The AvailablePart to base the build item on.</param>
        </member>
        <member name="M:Sandcastle.PrintShop.BuildItem.Save">
            <summary>
            Saves the build item.
            </summary>
            <returns>A ConfigNode containing serialized data.</returns>
        </member>
        <member name="T:Sandcastle.PrintShop.MaterialsList">
            <summary>
            Represents a list of resources needed to build an item of a particular part category.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.MaterialsList.kMaterialsListNode">
            <summary>
            Node ID for a materials list.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.MaterialsList.kTechNodeMaterials">
            <summary>
            Node ID for tech node materials. Parts in a specific tech node can require additional materials.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.MaterialsList.kDefaultMaterialsListName">
            <summary>
            Name of the default materials list.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.MaterialsList.kResourceNode">
            <summary>
            Represents a resource node.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.MaterialsList.name">
            <summary>
            Name of the materials list. This should correspond to one of the part categories.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.MaterialsList.materials">
            <summary>
            List of resource materials required.
            </summary>
        </member>
        <member name="M:Sandcastle.PrintShop.MaterialsList.LoadLists">
            <summary>
            Loads the materials lists that specify what materials are required to produce an item from a particular category.
            </summary>
            <returns>A Dictionary containing the list names as keys and MaterialList objects as values.</returns>
        </member>
        <member name="F:Sandcastle.PrintShop.MaterialsList.materialsLists">
            <summary>
            A map of all materials lists, keyed by part category name.
            </summary>
        </member>
        <member name="M:Sandcastle.PrintShop.MaterialsList.GetListForCategory(System.String)">
            <summary>
            Returns the materials list for the requested category, or the default list if the list for the requested category doesn't exist.
            </summary>
            <param name="categoryName">A string containing the desired category.</param>
            <returns>A MaterialsList if one exists for the desired category, or the default list.</returns>
        </member>
        <member name="M:Sandcastle.PrintShop.MaterialsList.GetDefaultList">
            <summary>
            Creates the default materials list.
            </summary>
            <returns>A MaterialsList containing the default materials.</returns>
        </member>
        <member name="T:Sandcastle.PrintShop.WBIPrintStates">
            <summary>
            Lists the different printer states
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBIPrintStates.Idle">
            <summary>
            Printer is idle, nothing to print.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBIPrintStates.Paused">
            <summary>
            Printer has an item to print but is paused.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBIPrintStates.Printing">
            <summary>
            Printer is printing something.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBIPrintStates.Recycling">
            <summary>
            The recycler is recycling something.
            </summary>
        </member>
        <member name="T:Sandcastle.PrintShop.WBIPrintShop">
            <summary>
            Represents a shop that is capable of printing items and placing them in an available inventory.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBIPrintShop.debugMode">
            <summary>
            A flag to enable/disable debug mode.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBIPrintShop.maxPrintVolume">
            <summary>
            The maximum volume that the printer can print, in liters. Set to less than 0 for no restrictions.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBIPrintShop.printSpeedUSec">
            <summary>
            The number of resource units per second that the printer can print.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBIPrintShop.UseSpecialistBonus">
            <summary>
            Flag to indicate whether or not to allow specialists to improve the print speed. Exactly how the specialist(s) does that is a trade secret.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBIPrintShop.SpecialistBonus">
            <summary>
            Per experience rating, how much to improve the print speed by.
            The print shop part must have crew capacity.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBIPrintShop.ExperienceEffect">
            <summary>
            The skill required to improve the print speed.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBIPrintShop.runningEffect">
            <summary>
            Name of the effect to play from the part's EFFECTS node when the printer is running.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBIPrintShop.printQueue">
            <summary>
            Represents the list of build items to print.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBIPrintShop.printState">
            <summary>
            Current state of the printer.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBIPrintShop.lastUpdateTime">
            <summary>
            Describes when the printer was last updated.
            </summary>
        </member>
        <member name="F:Sandcastle.PrintShop.WBIPrintShop.currentJob">
            <summary>
            Current job being printed.
            </summary>
        </member>
        <member name="T:Sandcastle.PrintShop.WBIPrinterRequirements">
            <summary>
            Describes the 3D Printer requirements for the part. This is a stub part module; the real functionality is over in PrinterInfoHelper.
            We have to do this because GetInfo is called during game start, we rely on PartLoader to get information about other parts that are needed to 3D print this part,
            and not all of the parts will be loaded when GetInfo is called.
            </summary>
        </member>
        <member name="T:Sandcastle.ModulePartGridVariants">
            <summary>
            This is a specialized class that creates a two-dimensional grid of meshes from a collection of meshes provided by the model.
            While it is possible to duplicate multiple copies of a single transform, research shows that the part's radial attachment
            system gets messed up when you do that. So for now, we have a grid that is limited by the total number of meshes in the model.
            </summary>
        </member>
        <member name="F:Sandcastle.ModulePartGridVariants.elementTransformName">
            <summary>
            Base name of the meshes found in the part's model object.
            All model transforms start with this prefix. Individual elements in the mesh should have " (n)" appended to them.
            NOTE: Be sure to have a total number of elements equal to totalRows * totalColumns and be sure to label them from (0) to (totalElements - 1)
            Example: yardFrameFlat37 (0), yardFrameFlat37 (1) ... yardFrameFlat37 (35)
            Note that there is a space between the prefix and the element id.
            </summary>
        </member>
        <member name="F:Sandcastle.ModulePartGridVariants.elementLength">
            <summary>
            Length of a single element, in meters.
            </summary>
        </member>
        <member name="F:Sandcastle.ModulePartGridVariants.elementWidth">
            <summary>
            Width of a single element, in meters.
            </summary>
        </member>
        <member name="F:Sandcastle.ModulePartGridVariants.elementHeight">
            <summary>
            Height of a single element, in meters.
            </summary>
        </member>
        <member name="F:Sandcastle.ModulePartGridVariants.totalRows">
            <summary>
            Total number of rows that are possible in the grid.
            </summary>
        </member>
        <member name="F:Sandcastle.ModulePartGridVariants.totalColumns">
            <summary>
            Total number of columns that are possible in the grid.
            </summary>
        </member>
        <member name="F:Sandcastle.ModulePartGridVariants.rowIndex">
            <summary>
            Current selected row variant.
            </summary>
        </member>
        <member name="F:Sandcastle.ModulePartGridVariants.columnIndex">
            <summary>
            Current selected column variant.
            </summary>
        </member>
        <member name="M:Sandcastle.ModulePartGridVariants.copyOriginalNodes(System.Collections.Generic.List{AttachNode})">
            <summary>
            Called when the part was copied in the editor.
            </summary>
            <param name="copyNodes">The list of AttachNode objects to copy into our originalNodes field.</param>
        </member>
        <member name="T:Sandcastle.Utilities.PrinterInfoHelper">
            <summary>
            This helper fills out the info text for the WBIPrinterRequirements part module. During the game startup, it asks part modules to GetInfo. WBIPrinterRequirements is no exception.
            However, because it relies on the PartLoader to obtain information about prerequisite components, WBIPrinterRequirements can't completely fill out its info.
            We get around the problem by waiting until we load into the editor, and manually changing the ModuleInfo associated with WBIPrinterRequirements.
            It's crude but effective.
            </summary>
        </member>
        <member name="T:Sandcastle.WBIPartModule">
            <summary>
            Just a simple base class to handle common functionality
            </summary>
        </member>
        <member name="M:Sandcastle.WBIPartModule.getPartConfigNode">
            <summary>
            Retrieves the module's config node from the part config.
            </summary>
            <returns>A ConfigNode for the part module.</returns>
        </member>
        <member name="M:Sandcastle.WBIPartModule.loadCurve(FloatCurve,System.String,ConfigNode)">
            <summary>
            Loads the desired FloatCurve from the desired config node.
            </summary>
            <param name="curve">The FloatCurve to load</param>
            <param name="curveNodeName">The name of the curve to load</param>
            <param name="defaultCurve">An optional default curve to use in case the curve's node doesn't exist in the part module's config.</param>
        </member>
    </members>
</doc>
